# Default values for neon-storage-controller.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  # -- Neondatabase image repository
  repository: neondatabase/neon
  # -- image pull policy
  pullPolicy: Always
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# -- Specify docker-registry secret names as an array
imagePullSecrets: []

# -- String to partially override neon-storage-controller.fullname template (will maintain the release name)
nameOverride: ""
# -- String to fully override neon-storage-controller.fullname template
fullnameOverride: ""

# Neon controller settings
settings:
  # settings.sentryUrl -- url (will be converted into `SENTRY_DSN` environment variable) used by sentry to collect error/panic events in storage-controller
  sentryUrl: ""
  # settings.sentryEnvironment -- "development" or "production". It will be visible in sentry in order to filter issues
  sentryEnvironment: "development"
  # May be set if AWS Secrets Manager is not being used: postgresql:// URL to the database
  databaseUrl: ""
  # May be set if AWS Secrets Manager is not being used: JWT token for authentication with pageservers
  jwtToken: ""
  # May be set if AWS Secrets Manager is not being used: public key for authenticating incoming HTTP requests
  publicKey: ""
  # May be set if AWS Secrets Manager is not being used: JWT token for authenticating calls to computeHookUrl
  controlPlaneJwtToken: ""
  # URL for compute notifications
  computeHookUrl: ""
  # settings.splitThreshold -- Size threshold in bytes for automatically sharding a tenant.  Omit to disable auto-sharding (default)
  splitThreshold: ""

# Enable auto register to control plane
# This will run postinstall job
registerControlPlane:
  enable: false
  # region_id: "<region-id>"
  controlPlaneJwtToken: ""
  # Console API key to list existing pageserver to get version
  apiKey: ""
  # cplane_url: "<control-plane-url>"
  # console_url: ""
  resources:
    limits:
      cpu: 100m
      memory: 128M
    requests:
      cpu: 100m
      memory: 128M

serviceAccount:
  # serviceAccount.create - Specifies whether a service account should be created
  create: true
  # serviceAccount.annotations -- Annotations to add to the service account
  annotations: {}
  # serviceAccount.name - The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations for neon-storage-controller pods
podAnnotations: {}

# -- Additional labels for neon-storage-controller pods
podLabels: {}
  # neon_service: controller
  # neon_env: staging
  # neon_region: us-west-1
  # neon_region_slug: virginia

# -- neon-storage-controller's pods Security Context
podSecurityContext: {}
  # fsGroup: 2000

# -- neon-storage-controller's containers Security Context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # service.annotations -- Annotations to add to the service
  annotations: {}
  type: ClusterIP
  # service.port -- controller listen port
  port: 50051

resources:
  limits:
    memory: 4Gi
  requests:
    cpu: 200m
    memory: 1Gi

# -- Node labels for pod assignment.
nodeSelector: {}

# -- Tolerations for pod assignment.
tolerations: []

# -- Affinity for pod assignment
affinity: {}

metrics:
  # metrics.enabled -- Enable prometheus metrcis autodiscovery
  enabled: false
  ## Prometheus Operator ServiceMonitor configuration
  ##
  serviceMonitor:
    # metrics.serviceMonitor.enabled -- Create ServiceMonitor resource
    enabled: false

    # metrics.serviceMonitor.namespace -- The namespace in which the ServiceMonitor will be created, if empty then Release.Namespace used
    namespace: ""

    ## Interval at which metrics should be scraped.
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    # metrics.serviceMonitor.interval -- Interval in which prometheus scrapes
    interval: 10s

    ## Timeout after which the scrape is ended
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    # metrics.serviceMonitor.scrapeTimeout -- Scrape Timeout duration for prometheus
    scrapeTimeout: 10s

    ## ServiceMonitor selector labels
    ## ref: https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack#prometheusioscrape
    ##
    # metrics.serviceMonitor.selector -- Additional labels to attach (used by Prometheus operator)
    selector: {}
    # selector:
    #   prometheus: neon


# -- Additional manifests that are created with the chart
extraManifests: []
