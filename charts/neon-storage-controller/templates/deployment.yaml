apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "neon-storage-controller.fullname" . }}
  labels:
    {{- include "neon-storage-controller.labels" . | nindent 4 }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 1
  # Which pods the Deployment is managing (duplicates template.metadata.labels).
  selector:
    matchLabels:
      {{- include "neon-storage-controller.selectorLabels" . | nindent 6 }}
  # Pod template.
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      # Labels set on created pods.
      labels:
        {{- include "neon-storage-controller.selectorLabels" . | nindent 8 }}
      {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "neon-storage-controller.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - attachment_service
            - -l
            # In the container, use the same port as service.
            - 0.0.0.0:{{ .Values.service.port }}
          {{- if .Values.settings.databaseUrl }}
            - --database-url
            - {{ .Values.settings.databaseUrl }}
          {{- end }}
          {{- if .Values.settings.jwtToken }}
            - --jwt-token
            - {{ .Values.settings.jwtToken }}
          {{- end }}
          {{- if .Values.settings.publicKey }}
            - --public-key={{ .Values.settings.publicKey | toJson }}
          {{- end }}
          {{- if .Values.settings.controlPlaneJwtToken }}
            - --control-plane-jwt-token
            - {{ .Values.settings.controlPlaneJwtToken }}
          {{- end }}
          {{- if .Values.settings.computeHookUrl }}
            - --compute-hook-url
            - {{ .Values.settings.computeHookUrl }}
          {{- end }}
          env:
            - name: LD_LIBRARY_PATH
              value: /usr/local/v16/lib
          {{- if .Values.settings }}
            {{- with .Values.settings.sentryUrl }}
            - name: SENTRY_DSN
              value: {{ . }}
            {{- end }}
            {{- with .Values.settings.sentryEnvironment }}
            - name: SENTRY_ENVIRONMENT
              value: {{ . }}
            {{- end }}
          {{- end }}
          ports:
            - name: controller
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          startupProbe:
            httpGet:
              path: /status
              port: controller
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 30
          livenessProbe:
            httpGet:
              path: /status
              port: controller
            periodSeconds: 15
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: controller
            periodSeconds: 15
            timeoutSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
